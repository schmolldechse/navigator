// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using stations.Database;

#nullable disable

namespace stations.Migrations
{
    [DbContext(typeof(StationDbContext))]
    [Migration("20250525091740_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("data")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("stations.Models.Database.Station", b =>
                {
                    b.Property<int>("EvaNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EvaNumber"));

                    b.Property<DateTime?>("LastQueried")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.PrimitiveCollection<List<string>>("Products")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<bool?>("QueryingEnabled")
                        .HasColumnType("boolean");

                    b.PrimitiveCollection<List<string>>("Ril100")
                        .HasColumnType("text[]");

                    b.Property<double>("_latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("Latitude");

                    b.Property<double>("_longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("Longitude");

                    b.HasKey("EvaNumber");

                    b.ToTable("stations", "data");
                });
#pragma warning restore 612, 618
        }
    }
}
